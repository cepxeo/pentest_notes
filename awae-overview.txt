Advanced Web Attacks and Exploitation (AWAE) OffSec

grep -r "function addattachment" /usr/local/atmail --color 2>/dev/null
grep -rnw /var/www/html -e "^.*something.*smthelse.*" --color
egrep '\$addslashes.*=.*' /var/www/html/ -r --color
egrep 'sometging.*someelse.*' /var/www/html/ -r --color
find /var/www/html -type d -perm -o+w - find writable dirs

Atmail (php, xss, csfr)
XSS in webmail in date field, payload SCRIPT w/Alert()
CSRF: js to create email with php attach
found upload dir param in source which is parsed if provided by the client (because all user params parsed in loop and mapped to DB values)
js hosted with 2 things above, called via xss, call the php remotely = rce

Atutor (php, mysql, sqli)
php.ini - display_errors = On
my.cnf - general_log = 1
         general_log_file = /var/tmp/blabla.log

Unauth Blind sqli to exfil username and hash (user_location = public in php files)
Login using hash got via sqli due to original pass is also hashed and after hashed again with token
Create zip with python script, Upload zip with path traversal in filename and using phtml extention that is not filtered
Type juggling ?

ManageEngine (java, postgresql, sqli)
someurl.do in URL means java app
web.xml contains java servlets with mapping to URL
regexps: ^.*?query.*?select.*?
          somechars.*?\n    - To find somechars and end of line char
search in java sources soGet and doPost, analyze if any of request parameters (request.getParameter("UserId")
                                                  is a part of select statement
in postgresql.conf set log_statement = all to log all sql queries, then restart the app service
in powershell: dir | sort LastWriteTime | select -last 1
                Get-Content .\postgesql_11.log -wait -tail 1 | Select-String -Pattern "select version"
in burp: GET /servlet/AMUserServet?ForMasRange=1&userId=1;select+pg_sleep(5);
in VBS: end on lines \n could be replaced with : column
For RCE in postgresql:
        quotes ' could be replaced by $$
        stacked queries
        as file could be created from db, existing vbs overwritten with reverse shell
        crafted dll loaded via smb share and run remotely
        alternatively use of large objects helps to send dll contents via sqli
Python script for reverse shell automation: video: UDF reverse shell (6:48) and Large object reverse shell (5:00)

BassMaster (nodejs)

find eval in nodejs source code: grep -rnw "eval(" . --color
ctrl+I in gedit to jump on the line number
regex101.com to test regexps
command injection in javascript: /item/$1.id;require('util').log('hacked');

DotNetNuke (.NET, deserialization)
in DnSpy search for .Deserialize
to debug Edit assembly and disable debugging optimization (video debugging DNN)

iconv -f ASCII -t UTF-16LE powershell_shell.txt | base64 | tr -d "\n"
